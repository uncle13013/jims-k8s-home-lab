variant: flatcar
version: 1.0.0
passwd:
  users:
    - name: core
      groups:
        - docker
        - sudo
storage:
  directories:
    - path: /etc/kubernetes
      mode: 0755
    - path: /var/lib/kubelet
      mode: 0755
    - path: /etc/cni/net.d
      mode: 0755
    - path: /opt/cni/bin
      mode: 0755
    - path: /opt/bin
      mode: 0755
    - path: /etc/docker
      mode: 0755
  files:
    # Docker daemon configuration
    - path: /etc/docker/daemon.json
      mode: 0644
      contents:
        inline: |
          {
            "exec-opts": ["native.cgroupdriver=systemd"],
            "log-driver": "json-file",
            "log-opts": {
              "max-size": "100m"
            },
            "storage-driver": "overlay2"
          }
    
    # Kubernetes networking modules
    - path: /etc/modules-load.d/k8s.conf
      mode: 0644
      contents:
        inline: |
          overlay
          br_netfilter
    
    # Kubernetes sysctl configuration
    - path: /etc/sysctl.d/k8s.conf
      mode: 0644
      contents:
        inline: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1
    
    # Kubelet systemd service
    - path: /etc/systemd/system/kubelet.service
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=kubelet: The Kubernetes Node Agent
          Documentation=https://kubernetes.io/docs/home/
          Wants=network-online.target
          After=network-online.target

          [Service]
          ExecStart=/opt/bin/kubelet
          Restart=always
          StartLimitInterval=0
          RestartSec=10

          [Install]
          WantedBy=multi-user.target
    
    # Kubelet service drop-in configuration
    - path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      mode: 0644
      contents:
        inline: |
          [Service]
          Environment="KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf"
          Environment="KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml"
          Environment="KUBELET_SYSTEM_PODS_ARGS=--pod-manifest-path=/etc/kubernetes/manifests --allow-privileged=true"
          Environment="KUBELET_NETWORK_ARGS=--network-plugin=cni --cni-conf-dir=/etc/cni/net.d --cni-bin-dir=/opt/cni/bin"
          Environment="KUBELET_DNS_ARGS=--cluster-dns=10.96.0.10 --cluster-domain=cluster.local"
          Environment="KUBELET_AUTHZ_ARGS=--authorization-mode=Webhook --client-ca-file=/etc/kubernetes/pki/ca.crt"
          Environment="KUBELET_CADVISOR_ARGS=--cadvisor-port=0"
          Environment="KUBELET_CERTIFICATE_ARGS=--rotate-certificates=true --cert-dir=/var/lib/kubelet/pki"
          Environment="KUBELET_EXTRA_ARGS=--container-runtime=remote --container-runtime-endpoint=unix:///var/run/dockershim.sock"
          ExecStart=
          ExecStart=/opt/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_SYSTEM_PODS_ARGS $KUBELET_NETWORK_ARGS $KUBELET_DNS_ARGS $KUBELET_AUTHZ_ARGS $KUBELET_CADVISOR_ARGS $KUBELET_CERTIFICATE_ARGS $KUBELET_EXTRA_ARGS
    
    # Kubernetes binary download script
    - path: /opt/download-k8s-binaries.sh
      mode: 0755
      contents:
        inline: |
          #!/bin/bash
          set -e
          
          K8S_VERSION="v1.28.2"
          CNI_VERSION="v1.3.0"
          
          echo "Downloading Kubernetes binaries..."
          
          # Download kubelet
          curl -L "https://dl.k8s.io/release/${K8S_VERSION}/bin/linux/amd64/kubelet" -o /opt/bin/kubelet
          chmod +x /opt/bin/kubelet
          
          # Download kubeadm
          curl -L "https://dl.k8s.io/release/${K8S_VERSION}/bin/linux/amd64/kubeadm" -o /opt/bin/kubeadm
          chmod +x /opt/bin/kubeadm
          
          # Download kubectl
          curl -L "https://dl.k8s.io/release/${K8S_VERSION}/bin/linux/amd64/kubectl" -o /opt/bin/kubectl
          chmod +x /opt/bin/kubectl
          
          # Download CNI plugins
          curl -L "https://github.com/containernetworking/plugins/releases/download/${CNI_VERSION}/cni-plugins-linux-amd64-${CNI_VERSION}.tgz" | tar -C /opt/cni/bin -xz
          
          echo "Kubernetes binaries downloaded successfully"
          
          # Add to PATH
          echo 'export PATH=$PATH:/opt/bin' >> /etc/profile
          
          # Load kernel modules
          modprobe overlay
          modprobe br_netfilter
          
          # Apply sysctl params
          sysctl --system
          
          echo "Kubernetes prerequisites configured"

systemd:
  units:
    # Enable Docker
    - name: docker.service
      enabled: true
    
    # Enable kubelet (but don't start until cluster join)
    - name: kubelet.service
      enabled: true
    
    # One-time service to download K8s binaries
    - name: download-k8s-binaries.service
      enabled: true
      contents: |
        [Unit]
        Description=Download Kubernetes Binaries
        Wants=network-online.target
        After=network-online.target
        ConditionPathExists=!/opt/bin/kubelet

        [Service]
        Type=oneshot
        ExecStart=/opt/download-k8s-binaries.sh
        RemainAfterExit=true

        [Install]
        WantedBy=multi-user.target
